{"version":3,"file":"static/js/525.945d5265.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  padding: 12px;\n\n  width: 230px;\n\n  border: 1px solid green;\n  border-radius: 16px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 16px;\n  & input {\n    margin-left: 4px;\n\n    padding: 0 4px;\n\n    width: 100%;\n    border: 1px solid green;\n\n    outline: none;\n\n    transition-property: all;\n    transition-timing-function: ease-in-out;\n    transition-timing-function: 250ms;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Label, Form } from './AddContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button } from '@chakra-ui/react';\n\nexport const AddContactForm = () => {\n  const dispatch = useDispatch();\n\n  const formHandler = event => {\n    event.preventDefault();\n    dispatch(\n      addContact({\n        name: event.target.name.value,\n        number: numberEdit(event.target.number.value),\n      })\n    );\n    event.target.reset();\n  };\n  const numberEdit = number => {\n    const editingNumber = number.split('');\n    editingNumber.splice(3, 0, '-');\n    editingNumber.splice(6, 0, '-');\n    return editingNumber.join('');\n  };\n  return (\n    <Form onSubmit={formHandler}>\n      <Label>\n        Name:\n        <input type=\"text\" name=\"name\" required />\n      </Label>\n      <Label>\n        Phone:\n        <input type=\"tel\" name=\"number\" required placeholder=\"000-00-00\" />\n      </Label>\n      <Button\n        margin={'0 auto'}\n        display={'block'}\n        variant={'outline'}\n        colorScheme={'green'}\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectStatusFilter = state => state.filter.status;\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact => {\n      if (filter.trim() === '') {\n        return contacts;\n      }\n      return contact.name.toLowerCase().includes(filter.trim().toLowerCase());\n    });\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BallTriangle } from 'react-loader-spinner';\n\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, ListItem, UnorderedList } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  function deleteHandler(id) {\n    dispatch(deleteContact(id));\n  }\n\n  return (\n    <>\n      <UnorderedList margin={'0 auto'} marginTop={'24px'} styleType={'none'}>\n        {isLoading && (\n          <BallTriangle\n            height={100}\n            width={100}\n            radius={5}\n            color=\"#4fa94d\"\n            ariaLabel=\"ball-triangle-loading\"\n            wrapperClass=\"\"\n            wrapperStyle={{\n              justifyContent: 'center',\n            }}\n            visible={true}\n          />\n        )}\n        {error && <h1> Вибачте виникла помилка</h1>}\n        {visibleContacts.map(({ name, id, number }) => (\n          <ListItem key={id} margin={'0 auto'} width={'max-content'}>\n            {name}: {number}\n            <Button\n              type=\"button\"\n              onClick={() => deleteHandler(id)}\n              backgroundColor={'white'}\n              color={'red'}\n              border={'none'}\n              _hover={{ backgroundColor: 'red', color: 'white' }}\n            >\n              <DeleteIcon fill={'currentcolor'} />\n            </Button>\n          </ListItem>\n        ))}\n      </UnorderedList>\n    </>\n  );\n};\n","import { Input } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/filterSlice';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n  const filterHandle = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <Input\n      type=\"text\"\n      value={filter}\n      onChange={filterHandle}\n      margin={'0 auto'}\n      marginTop={'24px'}\n      w={230}\n      display={'block'}\n      colorScheme={'green'}\n      placeholder=\"Find Contacts\"\n      _focusVisible={{ borderColor: 'green', boxShadow: '0 0 0 1px green' }}\n    />\n  );\n};\n","import { Box } from '@chakra-ui/react';\nimport { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  return (\n    <Box maxWidth={900} margin={[0, 'auto']} padding={'24px 0'}>\n      <AddContactForm />\n      <Filter />\n      <ContactsList />\n    </Box>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","Label","AddContactForm","dispatch","useDispatch","numberEdit","number","editingNumber","split","splice","join","onSubmit","event","preventDefault","addContact","name","target","value","reset","type","required","placeholder","margin","display","variant","colorScheme","selectStatusFilter","state","filter","status","selectIsLoading","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","contact","trim","toLowerCase","includes","ContactsList","useSelector","visibleContacts","marginTop","styleType","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","justifyContent","visible","map","id","onClick","deleteContact","deleteHandler","backgroundColor","border","_hover","fill","Filter","I","onChange","setFilter","w","_focusVisible","borderColor","boxShadow","useEffect","getContacts","maxWidth","padding"],"sourceRoot":""}